/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _NFS3_H_RPCGEN
#define _NFS3_H_RPCGEN

#define RPCGEN_VERSION	199506

#include <rpc/rpc.h>


typedef u_int64_t uint64;
#ifdef __cplusplus
extern "C" bool_t xdr_uint64(XDR *, uint64*);
#elif __STDC__
extern  bool_t xdr_uint64(XDR *, uint64*);
#else /* Old Style C */
bool_t xdr_uint64();
#endif /* Old Style C */


typedef int64_t int64;
#ifdef __cplusplus
extern "C" bool_t xdr_int64(XDR *, int64*);
#elif __STDC__
extern  bool_t xdr_int64(XDR *, int64*);
#else /* Old Style C */
bool_t xdr_int64();
#endif /* Old Style C */


typedef u_long uint32;
#ifdef __cplusplus
extern "C" bool_t xdr_uint32(XDR *, uint32*);
#elif __STDC__
extern  bool_t xdr_uint32(XDR *, uint32*);
#else /* Old Style C */
bool_t xdr_uint32();
#endif /* Old Style C */


typedef long int32;
#ifdef __cplusplus
extern "C" bool_t xdr_int32(XDR *, int32*);
#elif __STDC__
extern  bool_t xdr_int32(XDR *, int32*);
#else /* Old Style C */
bool_t xdr_int32();
#endif /* Old Style C */


typedef char *filename3;
#ifdef __cplusplus
extern "C" bool_t xdr_filename3(XDR *, filename3*);
#elif __STDC__
extern  bool_t xdr_filename3(XDR *, filename3*);
#else /* Old Style C */
bool_t xdr_filename3();
#endif /* Old Style C */


typedef char *nfspath3;
#ifdef __cplusplus
extern "C" bool_t xdr_nfspath3(XDR *, nfspath3*);
#elif __STDC__
extern  bool_t xdr_nfspath3(XDR *, nfspath3*);
#else /* Old Style C */
bool_t xdr_nfspath3();
#endif /* Old Style C */


typedef uint64 fileid3;
#ifdef __cplusplus
extern "C" bool_t xdr_fileid3(XDR *, fileid3*);
#elif __STDC__
extern  bool_t xdr_fileid3(XDR *, fileid3*);
#else /* Old Style C */
bool_t xdr_fileid3();
#endif /* Old Style C */


typedef uint64 cookie3;
#ifdef __cplusplus
extern "C" bool_t xdr_cookie3(XDR *, cookie3*);
#elif __STDC__
extern  bool_t xdr_cookie3(XDR *, cookie3*);
#else /* Old Style C */
bool_t xdr_cookie3();
#endif /* Old Style C */


typedef char cookieverf3[8];
#ifdef __cplusplus
extern "C" bool_t xdr_cookieverf3(XDR *, cookieverf3);
#elif __STDC__
extern  bool_t xdr_cookieverf3(XDR *, cookieverf3);
#else /* Old Style C */
bool_t xdr_cookieverf3();
#endif /* Old Style C */


typedef char createverf3[8];
#ifdef __cplusplus
extern "C" bool_t xdr_createverf3(XDR *, createverf3);
#elif __STDC__
extern  bool_t xdr_createverf3(XDR *, createverf3);
#else /* Old Style C */
bool_t xdr_createverf3();
#endif /* Old Style C */


typedef char writeverf3[8];
#ifdef __cplusplus
extern "C" bool_t xdr_writeverf3(XDR *, writeverf3);
#elif __STDC__
extern  bool_t xdr_writeverf3(XDR *, writeverf3);
#else /* Old Style C */
bool_t xdr_writeverf3();
#endif /* Old Style C */


typedef uint32 uid3;
#ifdef __cplusplus
extern "C" bool_t xdr_uid3(XDR *, uid3*);
#elif __STDC__
extern  bool_t xdr_uid3(XDR *, uid3*);
#else /* Old Style C */
bool_t xdr_uid3();
#endif /* Old Style C */


typedef uint32 gid3;
#ifdef __cplusplus
extern "C" bool_t xdr_gid3(XDR *, gid3*);
#elif __STDC__
extern  bool_t xdr_gid3(XDR *, gid3*);
#else /* Old Style C */
bool_t xdr_gid3();
#endif /* Old Style C */


typedef uint64 size3;
#ifdef __cplusplus
extern "C" bool_t xdr_size3(XDR *, size3*);
#elif __STDC__
extern  bool_t xdr_size3(XDR *, size3*);
#else /* Old Style C */
bool_t xdr_size3();
#endif /* Old Style C */


typedef uint64 offset3;
#ifdef __cplusplus
extern "C" bool_t xdr_offset3(XDR *, offset3*);
#elif __STDC__
extern  bool_t xdr_offset3(XDR *, offset3*);
#else /* Old Style C */
bool_t xdr_offset3();
#endif /* Old Style C */


typedef uint32 mode3;
#ifdef __cplusplus
extern "C" bool_t xdr_mode3(XDR *, mode3*);
#elif __STDC__
extern  bool_t xdr_mode3(XDR *, mode3*);
#else /* Old Style C */
bool_t xdr_mode3();
#endif /* Old Style C */


typedef uint32 count3;
#ifdef __cplusplus
extern "C" bool_t xdr_count3(XDR *, count3*);
#elif __STDC__
extern  bool_t xdr_count3(XDR *, count3*);
#else /* Old Style C */
bool_t xdr_count3();
#endif /* Old Style C */


enum nfsstat3 {
	NFS3_OK = 0,
	NFS3ERR_PERM = 1,
	NFS3ERR_NOENT = 2,
	NFS3ERR_IO = 5,
	NFS3ERR_NXIO = 6,
	NFS3ERR_ACCES = 13,
	NFS3ERR_EXIST = 17,
	NFS3ERR_XDEV = 18,
	NFS3ERR_NODEV = 19,
	NFS3ERR_NOTDIR = 20,
	NFS3ERR_ISDIR = 21,
	NFS3ERR_INVAL = 22,
	NFS3ERR_FBIG = 27,
	NFS3ERR_NOSPC = 28,
	NFS3ERR_ROFS = 30,
	NFS3ERR_MLINK = 31,
	NFS3ERR_NAMETOOLONG = 63,
	NFS3ERR_NOTEMPTY = 66,
	NFS3ERR_DQUOT = 69,
	NFS3ERR_STALE = 70,
	NFS3ERR_REMOTE = 71,
	NFS3ERR_BADHANDLE = 10001,
	NFS3ERR_NOT_SYNC = 10002,
	NFS3ERR_BAD_COOKIE = 10003,
	NFS3ERR_NOTSUPP = 10004,
	NFS3ERR_TOOSMALL = 10005,
	NFS3ERR_SERVERFAULT = 10006,
	NFS3ERR_BADTYPE = 10007,
	NFS3ERR_JUKEBOX = 10008,
};
typedef enum nfsstat3 nfsstat3;
#ifdef __cplusplus
extern "C" bool_t xdr_nfsstat3(XDR *, nfsstat3*);
#elif __STDC__
extern  bool_t xdr_nfsstat3(XDR *, nfsstat3*);
#else /* Old Style C */
bool_t xdr_nfsstat3();
#endif /* Old Style C */


enum ftype3 {
	NF3REG = 1,
	NF3DIR = 2,
	NF3BLK = 3,
	NF3CHR = 4,
	NF3LNK = 5,
	NF3SOCK = 6,
	NF3FIFO = 7,
};
typedef enum ftype3 ftype3;
#ifdef __cplusplus
extern "C" bool_t xdr_ftype3(XDR *, ftype3*);
#elif __STDC__
extern  bool_t xdr_ftype3(XDR *, ftype3*);
#else /* Old Style C */
bool_t xdr_ftype3();
#endif /* Old Style C */


struct specdata3 {
	uint32 specdata1;
	uint32 specdata2;
};
typedef struct specdata3 specdata3;
#ifdef __cplusplus
extern "C" bool_t xdr_specdata3(XDR *, specdata3*);
#elif __STDC__
extern  bool_t xdr_specdata3(XDR *, specdata3*);
#else /* Old Style C */
bool_t xdr_specdata3();
#endif /* Old Style C */


struct nfs_fh3 {
	struct {
		u_int data_len;
		char *data_val;
	} data;
};
typedef struct nfs_fh3 nfs_fh3;
#ifdef __cplusplus
extern "C" bool_t xdr_nfs_fh3(XDR *, nfs_fh3*);
#elif __STDC__
extern  bool_t xdr_nfs_fh3(XDR *, nfs_fh3*);
#else /* Old Style C */
bool_t xdr_nfs_fh3();
#endif /* Old Style C */


struct nfstime3 {
	uint32 seconds;
	uint32 nseconds;
};
typedef struct nfstime3 nfstime3;
#ifdef __cplusplus
extern "C" bool_t xdr_nfstime3(XDR *, nfstime3*);
#elif __STDC__
extern  bool_t xdr_nfstime3(XDR *, nfstime3*);
#else /* Old Style C */
bool_t xdr_nfstime3();
#endif /* Old Style C */


struct fattr3 {
	ftype3 type;
	mode3 mode;
	uint32 nlink;
	uid3 uid;
	gid3 gid;
	size3 size;
	size3 used;
	specdata3 rdev;
	uint64 fsid;
	fileid3 fileid;
	nfstime3 atime;
	nfstime3 mtime;
	nfstime3 ctime;
};
typedef struct fattr3 fattr3;
#ifdef __cplusplus
extern "C" bool_t xdr_fattr3(XDR *, fattr3*);
#elif __STDC__
extern  bool_t xdr_fattr3(XDR *, fattr3*);
#else /* Old Style C */
bool_t xdr_fattr3();
#endif /* Old Style C */


struct post_op_attr {
	bool_t attributes_follow;
	union {
		fattr3 attributes;
	} post_op_attr_u;
};
typedef struct post_op_attr post_op_attr;
#ifdef __cplusplus
extern "C" bool_t xdr_post_op_attr(XDR *, post_op_attr*);
#elif __STDC__
extern  bool_t xdr_post_op_attr(XDR *, post_op_attr*);
#else /* Old Style C */
bool_t xdr_post_op_attr();
#endif /* Old Style C */


struct wcc_attr {
	size3 size;
	nfstime3 mtime;
	nfstime3 ctime;
};
typedef struct wcc_attr wcc_attr;
#ifdef __cplusplus
extern "C" bool_t xdr_wcc_attr(XDR *, wcc_attr*);
#elif __STDC__
extern  bool_t xdr_wcc_attr(XDR *, wcc_attr*);
#else /* Old Style C */
bool_t xdr_wcc_attr();
#endif /* Old Style C */


struct pre_op_attr {
	bool_t attributes_follow;
	union {
		wcc_attr attributes;
	} pre_op_attr_u;
};
typedef struct pre_op_attr pre_op_attr;
#ifdef __cplusplus
extern "C" bool_t xdr_pre_op_attr(XDR *, pre_op_attr*);
#elif __STDC__
extern  bool_t xdr_pre_op_attr(XDR *, pre_op_attr*);
#else /* Old Style C */
bool_t xdr_pre_op_attr();
#endif /* Old Style C */


struct wcc_data {
	pre_op_attr before;
	post_op_attr after;
};
typedef struct wcc_data wcc_data;
#ifdef __cplusplus
extern "C" bool_t xdr_wcc_data(XDR *, wcc_data*);
#elif __STDC__
extern  bool_t xdr_wcc_data(XDR *, wcc_data*);
#else /* Old Style C */
bool_t xdr_wcc_data();
#endif /* Old Style C */


struct post_op_fh3 {
	bool_t handle_follows;
	union {
		nfs_fh3 handle;
	} post_op_fh3_u;
};
typedef struct post_op_fh3 post_op_fh3;
#ifdef __cplusplus
extern "C" bool_t xdr_post_op_fh3(XDR *, post_op_fh3*);
#elif __STDC__
extern  bool_t xdr_post_op_fh3(XDR *, post_op_fh3*);
#else /* Old Style C */
bool_t xdr_post_op_fh3();
#endif /* Old Style C */


enum time_how {
	DONT_CHANGE = 0,
	SET_TO_SERVER_TIME = 1,
	SET_TO_CLIENT_TIME = 2,
};
typedef enum time_how time_how;
#ifdef __cplusplus
extern "C" bool_t xdr_time_how(XDR *, time_how*);
#elif __STDC__
extern  bool_t xdr_time_how(XDR *, time_how*);
#else /* Old Style C */
bool_t xdr_time_how();
#endif /* Old Style C */


struct set_mode3 {
	bool_t set_it;
	union {
		mode3 mode;
	} set_mode3_u;
};
typedef struct set_mode3 set_mode3;
#ifdef __cplusplus
extern "C" bool_t xdr_set_mode3(XDR *, set_mode3*);
#elif __STDC__
extern  bool_t xdr_set_mode3(XDR *, set_mode3*);
#else /* Old Style C */
bool_t xdr_set_mode3();
#endif /* Old Style C */


struct set_uid3 {
	bool_t set_it;
	union {
		uid3 uid;
	} set_uid3_u;
};
typedef struct set_uid3 set_uid3;
#ifdef __cplusplus
extern "C" bool_t xdr_set_uid3(XDR *, set_uid3*);
#elif __STDC__
extern  bool_t xdr_set_uid3(XDR *, set_uid3*);
#else /* Old Style C */
bool_t xdr_set_uid3();
#endif /* Old Style C */


struct set_gid3 {
	bool_t set_it;
	union {
		gid3 gid;
	} set_gid3_u;
};
typedef struct set_gid3 set_gid3;
#ifdef __cplusplus
extern "C" bool_t xdr_set_gid3(XDR *, set_gid3*);
#elif __STDC__
extern  bool_t xdr_set_gid3(XDR *, set_gid3*);
#else /* Old Style C */
bool_t xdr_set_gid3();
#endif /* Old Style C */


struct set_size3 {
	bool_t set_it;
	union {
		size3 size;
	} set_size3_u;
};
typedef struct set_size3 set_size3;
#ifdef __cplusplus
extern "C" bool_t xdr_set_size3(XDR *, set_size3*);
#elif __STDC__
extern  bool_t xdr_set_size3(XDR *, set_size3*);
#else /* Old Style C */
bool_t xdr_set_size3();
#endif /* Old Style C */


struct set_atime {
	time_how set_it;
	union {
		nfstime3 atime;
	} set_atime_u;
};
typedef struct set_atime set_atime;
#ifdef __cplusplus
extern "C" bool_t xdr_set_atime(XDR *, set_atime*);
#elif __STDC__
extern  bool_t xdr_set_atime(XDR *, set_atime*);
#else /* Old Style C */
bool_t xdr_set_atime();
#endif /* Old Style C */


struct set_mtime {
	time_how set_it;
	union {
		nfstime3 mtime;
	} set_mtime_u;
};
typedef struct set_mtime set_mtime;
#ifdef __cplusplus
extern "C" bool_t xdr_set_mtime(XDR *, set_mtime*);
#elif __STDC__
extern  bool_t xdr_set_mtime(XDR *, set_mtime*);
#else /* Old Style C */
bool_t xdr_set_mtime();
#endif /* Old Style C */


struct sattr3 {
	set_mode3 mode;
	set_uid3 uid;
	set_gid3 gid;
	set_size3 size;
	set_atime atime;
	set_mtime mtime;
};
typedef struct sattr3 sattr3;
#ifdef __cplusplus
extern "C" bool_t xdr_sattr3(XDR *, sattr3*);
#elif __STDC__
extern  bool_t xdr_sattr3(XDR *, sattr3*);
#else /* Old Style C */
bool_t xdr_sattr3();
#endif /* Old Style C */


struct diropargs3 {
	nfs_fh3 dir;
	filename3 name;
};
typedef struct diropargs3 diropargs3;
#ifdef __cplusplus
extern "C" bool_t xdr_diropargs3(XDR *, diropargs3*);
#elif __STDC__
extern  bool_t xdr_diropargs3(XDR *, diropargs3*);
#else /* Old Style C */
bool_t xdr_diropargs3();
#endif /* Old Style C */


struct GETATTR3args {
	nfs_fh3 object;
};
typedef struct GETATTR3args GETATTR3args;
#ifdef __cplusplus
extern "C" bool_t xdr_GETATTR3args(XDR *, GETATTR3args*);
#elif __STDC__
extern  bool_t xdr_GETATTR3args(XDR *, GETATTR3args*);
#else /* Old Style C */
bool_t xdr_GETATTR3args();
#endif /* Old Style C */


struct GETATTR3resok {
	fattr3 obj_attributes;
};
typedef struct GETATTR3resok GETATTR3resok;
#ifdef __cplusplus
extern "C" bool_t xdr_GETATTR3resok(XDR *, GETATTR3resok*);
#elif __STDC__
extern  bool_t xdr_GETATTR3resok(XDR *, GETATTR3resok*);
#else /* Old Style C */
bool_t xdr_GETATTR3resok();
#endif /* Old Style C */


struct GETATTR3res {
	nfsstat3 status;
	union {
		GETATTR3resok resok;
	} GETATTR3res_u;
};
typedef struct GETATTR3res GETATTR3res;
#ifdef __cplusplus
extern "C" bool_t xdr_GETATTR3res(XDR *, GETATTR3res*);
#elif __STDC__
extern  bool_t xdr_GETATTR3res(XDR *, GETATTR3res*);
#else /* Old Style C */
bool_t xdr_GETATTR3res();
#endif /* Old Style C */


struct sattrguard3 {
	bool_t check;
	union {
		nfstime3 obj_ctime;
	} sattrguard3_u;
};
typedef struct sattrguard3 sattrguard3;
#ifdef __cplusplus
extern "C" bool_t xdr_sattrguard3(XDR *, sattrguard3*);
#elif __STDC__
extern  bool_t xdr_sattrguard3(XDR *, sattrguard3*);
#else /* Old Style C */
bool_t xdr_sattrguard3();
#endif /* Old Style C */


struct SETATTR3args {
	nfs_fh3 object;
	sattr3 new_attributes;
	sattrguard3 guard;
};
typedef struct SETATTR3args SETATTR3args;
#ifdef __cplusplus
extern "C" bool_t xdr_SETATTR3args(XDR *, SETATTR3args*);
#elif __STDC__
extern  bool_t xdr_SETATTR3args(XDR *, SETATTR3args*);
#else /* Old Style C */
bool_t xdr_SETATTR3args();
#endif /* Old Style C */


struct SETATTR3resok {
	wcc_data obj_wcc;
};
typedef struct SETATTR3resok SETATTR3resok;
#ifdef __cplusplus
extern "C" bool_t xdr_SETATTR3resok(XDR *, SETATTR3resok*);
#elif __STDC__
extern  bool_t xdr_SETATTR3resok(XDR *, SETATTR3resok*);
#else /* Old Style C */
bool_t xdr_SETATTR3resok();
#endif /* Old Style C */


struct SETATTR3resfail {
	wcc_data obj_wcc;
};
typedef struct SETATTR3resfail SETATTR3resfail;
#ifdef __cplusplus
extern "C" bool_t xdr_SETATTR3resfail(XDR *, SETATTR3resfail*);
#elif __STDC__
extern  bool_t xdr_SETATTR3resfail(XDR *, SETATTR3resfail*);
#else /* Old Style C */
bool_t xdr_SETATTR3resfail();
#endif /* Old Style C */


struct SETATTR3res {
	nfsstat3 status;
	union {
		SETATTR3resok resok;
		SETATTR3resfail resfail;
	} SETATTR3res_u;
};
typedef struct SETATTR3res SETATTR3res;
#ifdef __cplusplus
extern "C" bool_t xdr_SETATTR3res(XDR *, SETATTR3res*);
#elif __STDC__
extern  bool_t xdr_SETATTR3res(XDR *, SETATTR3res*);
#else /* Old Style C */
bool_t xdr_SETATTR3res();
#endif /* Old Style C */


#define NFS_PROGRAM ((rpc_uint)100003)
#define NFS_V3 ((rpc_uint)3)

#ifdef __cplusplus
#define NFSPROC3_NULL ((rpc_uint)0)
extern "C" void * nfsproc3_null_3(void *, CLIENT *);
extern "C" void * nfsproc3_null_3_svc(void *, struct svc_req *);
#define NFSPROC3_GETATTR ((rpc_uint)1)
extern "C" GETATTR3res * nfsproc3_getattr_3(GETATTR3args *, CLIENT *);
extern "C" GETATTR3res * nfsproc3_getattr_3_svc(GETATTR3args *, struct svc_req *);
#define NFSPROC3_SETATTR ((rpc_uint)2)
extern "C" SETATTR3res * nfsproc3_setattr_3(SETATTR3args *, CLIENT *);
extern "C" SETATTR3res * nfsproc3_setattr_3_svc(SETATTR3args *, struct svc_req *);
#define NFSPROC3_LOOKUP ((rpc_uint)3)
extern "C" LOOKUP3res * nfsproc3_lookup_3(LOOKUP3args *, CLIENT *);
extern "C" LOOKUP3res * nfsproc3_lookup_3_svc(LOOKUP3args *, struct svc_req *);
#define NFSPROC3_ACCESS ((rpc_uint)4)
extern "C" ACCESS3res * nfsproc3_access_3(ACCESS3args *, CLIENT *);
extern "C" ACCESS3res * nfsproc3_access_3_svc(ACCESS3args *, struct svc_req *);
#define NFSPROC3_READLINK ((rpc_uint)5)
extern "C" READLINK3res * nfsproc3_readlink_3(READLINK3args *, CLIENT *);
extern "C" READLINK3res * nfsproc3_readlink_3_svc(READLINK3args *, struct svc_req *);
#define NFSPROC3_READ ((rpc_uint)6)
extern "C" READ3res * nfsproc3_read_3(READ3args *, CLIENT *);
extern "C" READ3res * nfsproc3_read_3_svc(READ3args *, struct svc_req *);
#define NFSPROC3_WRITE ((rpc_uint)7)
extern "C" WRITE3res * nfsproc3_write_3(WRITE3args *, CLIENT *);
extern "C" WRITE3res * nfsproc3_write_3_svc(WRITE3args *, struct svc_req *);
#define NFSPROC3_CREATE ((rpc_uint)8)
extern "C" CREATE3res * nfsproc3_create_3(CREATE3args *, CLIENT *);
extern "C" CREATE3res * nfsproc3_create_3_svc(CREATE3args *, struct svc_req *);
#define NFSPROC3_MKDIR ((rpc_uint)9)
extern "C" MKDIR3res * nfsproc3_mkdir_3(MKDIR3args *, CLIENT *);
extern "C" MKDIR3res * nfsproc3_mkdir_3_svc(MKDIR3args *, struct svc_req *);
#define NFSPROC3_SYMLINK ((rpc_uint)10)
extern "C" SYMLINK3res * nfsproc3_symlink_3(SYMLINK3args *, CLIENT *);
extern "C" SYMLINK3res * nfsproc3_symlink_3_svc(SYMLINK3args *, struct svc_req *);
#define NFSPROC3_MKNOD ((rpc_uint)11)
extern "C" MKNOD3res * nfsproc3_mknod_3(MKNOD3args *, CLIENT *);
extern "C" MKNOD3res * nfsproc3_mknod_3_svc(MKNOD3args *, struct svc_req *);
#define NFSPROC3_REMOVE ((rpc_uint)12)
extern "C" REMOVE3res * nfsproc3_remove_3(REMOVE3args *, CLIENT *);
extern "C" REMOVE3res * nfsproc3_remove_3_svc(REMOVE3args *, struct svc_req *);
#define NFSPROC3_RMDIR ((rpc_uint)13)
extern "C" RMDIR3res * nfsproc3_rmdir_3(RMDIR3args *, CLIENT *);
extern "C" RMDIR3res * nfsproc3_rmdir_3_svc(RMDIR3args *, struct svc_req *);
#define NFSPROC3_RENAME ((rpc_uint)14)
extern "C" RENAME3res * nfsproc3_rename_3(RENAME3args *, CLIENT *);
extern "C" RENAME3res * nfsproc3_rename_3_svc(RENAME3args *, struct svc_req *);
#define NFSPROC3_LINK ((rpc_uint)15)
extern "C" LINK3res * nfsproc3_link_3(LINK3args *, CLIENT *);
extern "C" LINK3res * nfsproc3_link_3_svc(LINK3args *, struct svc_req *);
#define NFSPROC3_READDIR ((rpc_uint)16)
extern "C" READDIR3res * nfsproc3_readdir_3(READDIR3args *, CLIENT *);
extern "C" READDIR3res * nfsproc3_readdir_3_svc(READDIR3args *, struct svc_req *);
#define NFSPROC3_READDIRPLUS ((rpc_uint)17)
extern "C" READDIRPLUS3res * nfsproc3_readdirplus_3(READDIRPLUS3args *, CLIENT *);
extern "C" READDIRPLUS3res * nfsproc3_readdirplus_3_svc(READDIRPLUS3args *, struct svc_req *);
#define NFSPROC3_FSSTAT ((rpc_uint)18)
extern "C" FSSTAT3res * nfsproc3_fsstat_3(FSSTAT3args *, CLIENT *);
extern "C" FSSTAT3res * nfsproc3_fsstat_3_svc(FSSTAT3args *, struct svc_req *);
#define NFSPROC3_FSINFO ((rpc_uint)19)
extern "C" FSINFO3res * nfsproc3_fsinfo_3(FSINFO3args *, CLIENT *);
extern "C" FSINFO3res * nfsproc3_fsinfo_3_svc(FSINFO3args *, struct svc_req *);
#define NFSPROC3_PATHCONF ((rpc_uint)20)
extern "C" PATHCONF3res * nfsproc3_pathconf_3(PATHCONF3args *, CLIENT *);
extern "C" PATHCONF3res * nfsproc3_pathconf_3_svc(PATHCONF3args *, struct svc_req *);
#define NFSPROC3_COMMIT ((rpc_uint)21)
extern "C" COMMIT3res * nfsproc3_commit_3(COMMIT3args *, CLIENT *);
extern "C" COMMIT3res * nfsproc3_commit_3_svc(COMMIT3args *, struct svc_req *);

#elif __STDC__
#define NFSPROC3_NULL ((rpc_uint)0)
extern  void * nfsproc3_null_3(void *, CLIENT *);
extern  void * nfsproc3_null_3_svc(void *, struct svc_req *);
#define NFSPROC3_GETATTR ((rpc_uint)1)
extern  GETATTR3res * nfsproc3_getattr_3(GETATTR3args *, CLIENT *);
extern  GETATTR3res * nfsproc3_getattr_3_svc(GETATTR3args *, struct svc_req *);
#define NFSPROC3_SETATTR ((rpc_uint)2)
extern  SETATTR3res * nfsproc3_setattr_3(SETATTR3args *, CLIENT *);
extern  SETATTR3res * nfsproc3_setattr_3_svc(SETATTR3args *, struct svc_req *);
#define NFSPROC3_LOOKUP ((rpc_uint)3)
extern  LOOKUP3res * nfsproc3_lookup_3(LOOKUP3args *, CLIENT *);
extern  LOOKUP3res * nfsproc3_lookup_3_svc(LOOKUP3args *, struct svc_req *);
#define NFSPROC3_ACCESS ((rpc_uint)4)
extern  ACCESS3res * nfsproc3_access_3(ACCESS3args *, CLIENT *);
extern  ACCESS3res * nfsproc3_access_3_svc(ACCESS3args *, struct svc_req *);
#define NFSPROC3_READLINK ((rpc_uint)5)
extern  READLINK3res * nfsproc3_readlink_3(READLINK3args *, CLIENT *);
extern  READLINK3res * nfsproc3_readlink_3_svc(READLINK3args *, struct svc_req *);
#define NFSPROC3_READ ((rpc_uint)6)
extern  READ3res * nfsproc3_read_3(READ3args *, CLIENT *);
extern  READ3res * nfsproc3_read_3_svc(READ3args *, struct svc_req *);
#define NFSPROC3_WRITE ((rpc_uint)7)
extern  WRITE3res * nfsproc3_write_3(WRITE3args *, CLIENT *);
extern  WRITE3res * nfsproc3_write_3_svc(WRITE3args *, struct svc_req *);
#define NFSPROC3_CREATE ((rpc_uint)8)
extern  CREATE3res * nfsproc3_create_3(CREATE3args *, CLIENT *);
extern  CREATE3res * nfsproc3_create_3_svc(CREATE3args *, struct svc_req *);
#define NFSPROC3_MKDIR ((rpc_uint)9)
extern  MKDIR3res * nfsproc3_mkdir_3(MKDIR3args *, CLIENT *);
extern  MKDIR3res * nfsproc3_mkdir_3_svc(MKDIR3args *, struct svc_req *);
#define NFSPROC3_SYMLINK ((rpc_uint)10)
extern  SYMLINK3res * nfsproc3_symlink_3(SYMLINK3args *, CLIENT *);
extern  SYMLINK3res * nfsproc3_symlink_3_svc(SYMLINK3args *, struct svc_req *);
#define NFSPROC3_MKNOD ((rpc_uint)11)
extern  MKNOD3res * nfsproc3_mknod_3(MKNOD3args *, CLIENT *);
extern  MKNOD3res * nfsproc3_mknod_3_svc(MKNOD3args *, struct svc_req *);
#define NFSPROC3_REMOVE ((rpc_uint)12)
extern  REMOVE3res * nfsproc3_remove_3(REMOVE3args *, CLIENT *);
extern  REMOVE3res * nfsproc3_remove_3_svc(REMOVE3args *, struct svc_req *);
#define NFSPROC3_RMDIR ((rpc_uint)13)
extern  RMDIR3res * nfsproc3_rmdir_3(RMDIR3args *, CLIENT *);
extern  RMDIR3res * nfsproc3_rmdir_3_svc(RMDIR3args *, struct svc_req *);
#define NFSPROC3_RENAME ((rpc_uint)14)
extern  RENAME3res * nfsproc3_rename_3(RENAME3args *, CLIENT *);
extern  RENAME3res * nfsproc3_rename_3_svc(RENAME3args *, struct svc_req *);
#define NFSPROC3_LINK ((rpc_uint)15)
extern  LINK3res * nfsproc3_link_3(LINK3args *, CLIENT *);
extern  LINK3res * nfsproc3_link_3_svc(LINK3args *, struct svc_req *);
#define NFSPROC3_READDIR ((rpc_uint)16)
extern  READDIR3res * nfsproc3_readdir_3(READDIR3args *, CLIENT *);
extern  READDIR3res * nfsproc3_readdir_3_svc(READDIR3args *, struct svc_req *);
#define NFSPROC3_READDIRPLUS ((rpc_uint)17)
extern  READDIRPLUS3res * nfsproc3_readdirplus_3(READDIRPLUS3args *, CLIENT *);
extern  READDIRPLUS3res * nfsproc3_readdirplus_3_svc(READDIRPLUS3args *, struct svc_req *);
#define NFSPROC3_FSSTAT ((rpc_uint)18)
extern  FSSTAT3res * nfsproc3_fsstat_3(FSSTAT3args *, CLIENT *);
extern  FSSTAT3res * nfsproc3_fsstat_3_svc(FSSTAT3args *, struct svc_req *);
#define NFSPROC3_FSINFO ((rpc_uint)19)
extern  FSINFO3res * nfsproc3_fsinfo_3(FSINFO3args *, CLIENT *);
extern  FSINFO3res * nfsproc3_fsinfo_3_svc(FSINFO3args *, struct svc_req *);
#define NFSPROC3_PATHCONF ((rpc_uint)20)
extern  PATHCONF3res * nfsproc3_pathconf_3(PATHCONF3args *, CLIENT *);
extern  PATHCONF3res * nfsproc3_pathconf_3_svc(PATHCONF3args *, struct svc_req *);
#define NFSPROC3_COMMIT ((rpc_uint)21)
extern  COMMIT3res * nfsproc3_commit_3(COMMIT3args *, CLIENT *);
extern  COMMIT3res * nfsproc3_commit_3_svc(COMMIT3args *, struct svc_req *);

#else /* Old Style C */
#define NFSPROC3_NULL ((rpc_uint)0)
extern  void * nfsproc3_null_3();
extern  void * nfsproc3_null_3_svc();
#define NFSPROC3_GETATTR ((rpc_uint)1)
extern  GETATTR3res * nfsproc3_getattr_3();
extern  GETATTR3res * nfsproc3_getattr_3_svc();
#define NFSPROC3_SETATTR ((rpc_uint)2)
extern  SETATTR3res * nfsproc3_setattr_3();
extern  SETATTR3res * nfsproc3_setattr_3_svc();
#define NFSPROC3_LOOKUP ((rpc_uint)3)
extern  LOOKUP3res * nfsproc3_lookup_3();
extern  LOOKUP3res * nfsproc3_lookup_3_svc();
#define NFSPROC3_ACCESS ((rpc_uint)4)
extern  ACCESS3res * nfsproc3_access_3();
extern  ACCESS3res * nfsproc3_access_3_svc();
#define NFSPROC3_READLINK ((rpc_uint)5)
extern  READLINK3res * nfsproc3_readlink_3();
extern  READLINK3res * nfsproc3_readlink_3_svc();
#define NFSPROC3_READ ((rpc_uint)6)
extern  READ3res * nfsproc3_read_3();
extern  READ3res * nfsproc3_read_3_svc();
#define NFSPROC3_WRITE ((rpc_uint)7)
extern  WRITE3res * nfsproc3_write_3();
extern  WRITE3res * nfsproc3_write_3_svc();
#define NFSPROC3_CREATE ((rpc_uint)8)
extern  CREATE3res * nfsproc3_create_3();
extern  CREATE3res * nfsproc3_create_3_svc();
#define NFSPROC3_MKDIR ((rpc_uint)9)
extern  MKDIR3res * nfsproc3_mkdir_3();
extern  MKDIR3res * nfsproc3_mkdir_3_svc();
#define NFSPROC3_SYMLINK ((rpc_uint)10)
extern  SYMLINK3res * nfsproc3_symlink_3();
extern  SYMLINK3res * nfsproc3_symlink_3_svc();
#define NFSPROC3_MKNOD ((rpc_uint)11)
extern  MKNOD3res * nfsproc3_mknod_3();
extern  MKNOD3res * nfsproc3_mknod_3_svc();
#define NFSPROC3_REMOVE ((rpc_uint)12)
extern  REMOVE3res * nfsproc3_remove_3();
extern  REMOVE3res * nfsproc3_remove_3_svc();
#define NFSPROC3_RMDIR ((rpc_uint)13)
extern  RMDIR3res * nfsproc3_rmdir_3();
extern  RMDIR3res * nfsproc3_rmdir_3_svc();
#define NFSPROC3_RENAME ((rpc_uint)14)
extern  RENAME3res * nfsproc3_rename_3();
extern  RENAME3res * nfsproc3_rename_3_svc();
#define NFSPROC3_LINK ((rpc_uint)15)
extern  LINK3res * nfsproc3_link_3();
extern  LINK3res * nfsproc3_link_3_svc();
#define NFSPROC3_READDIR ((rpc_uint)16)
extern  READDIR3res * nfsproc3_readdir_3();
extern  READDIR3res * nfsproc3_readdir_3_svc();
#define NFSPROC3_READDIRPLUS ((rpc_uint)17)
extern  READDIRPLUS3res * nfsproc3_readdirplus_3();
extern  READDIRPLUS3res * nfsproc3_readdirplus_3_svc();
#define NFSPROC3_FSSTAT ((rpc_uint)18)
extern  FSSTAT3res * nfsproc3_fsstat_3();
extern  FSSTAT3res * nfsproc3_fsstat_3_svc();
#define NFSPROC3_FSINFO ((rpc_uint)19)
extern  FSINFO3res * nfsproc3_fsinfo_3();
extern  FSINFO3res * nfsproc3_fsinfo_3_svc();
#define NFSPROC3_PATHCONF ((rpc_uint)20)
extern  PATHCONF3res * nfsproc3_pathconf_3();
extern  PATHCONF3res * nfsproc3_pathconf_3_svc();
#define NFSPROC3_COMMIT ((rpc_uint)21)
extern  COMMIT3res * nfsproc3_commit_3();
extern  COMMIT3res * nfsproc3_commit_3_svc();
#endif /* Old Style C */

#endif /* !_NFS3_H_RPCGEN */
